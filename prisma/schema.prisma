generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ProjectStatus {
  ACTIVE
  ARCHIVED
  DELETED
}

enum ProjectRole {
  OWNER
  ADMIN
  MEMBER
  VIEWER
}

model User {
  id        Int            @id @default(autoincrement())
  email     String         @unique
  name      String?
  passwordHash String
  sessions  Session[]
  projectMemberships ProjectMember[]
  ownedProjects Project[]      @relation("ProjectOwner")
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
}

model Session {
  id        String   @id @default(uuid())
  token     String   @unique
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  createdAt DateTime @default(now())
  expiresAt DateTime?
}

model ProjectMember {
  id        Int         @id @default(autoincrement())
  user      User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  project   Project     @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId Int
  role      ProjectRole @default(MEMBER)
  joinedAt  DateTime    @default(now())

  @@unique([userId, projectId])
}

model Project {
  id          Int            @id @default(autoincrement())
  name        String
  description String?
  projectFile String?
  status      ProjectStatus  @default(ACTIVE)
  owner       User?          @relation("ProjectOwner", fields: [ownerId], references: [id], onDelete: Cascade)
  ownerId     Int?
  members     ProjectMember[]
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
}
